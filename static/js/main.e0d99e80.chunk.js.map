{"version":3,"sources":["csv/latest_situation_of_reported_cases_covid_19_chi.csv","csv/enhanced_sur_covid_19_chi.csv","csv/building_list_chi.csv","csv/home_confinees_tier2_building_list.csv","img/loading.gif","constants/constants.js","components/AppBar.js","pages/Dashboard.js","pages/Statistics.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PAGES","STAT_URLS","STAT_TITLE","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","CustomAppBar","props","classes","handleChangePage","currentPage","setCurrentPage","prevState","className","AppBar","style","Toolbar","Typography","variant","noWrap","Button","onClick","background","paper","listButtonStyles","marginBottom","Dashboard","Fragment","CssBaseline","Container","maxWidth","flexDirection","marginTop","paddingTop","paddingBottom","tyle","textAlign","transform","exampleWrapper","radioGroup","margin","speedDial","bottom","right","top","left","Statisitcs","useState","isLoading","setIsLoading","open","severity","message","snackState","setSnackState","speedDialOpen","setSpeedDialOpen","anchorEl","setAnchorEl","columns","data","searchKey","filteredData","state","setState","sortingState","setSortingState","setOpenSnack","prevSnack","useEffect","url","latest","cases","buildings","confiness","csv","then","csvData","filter","row","i","length","map","col","field","hasDate","dataSortByDate","includes","sort","a","b","compareDate","Object","keys","forEach","column","handleReset","aTimestamps","split","bTimestamps","aTime","Date","setDate","setMonth","setFullYear","bTime","getTime","handleCloseMenu","result","localization","pagination","previousTooltip","previousAriaLabel","nextTooltip","nextAriaLabel","lastTooltip","lastAriaLabel","firstTooltip","firstAriaLabel","labelRowsSelect","labelRowsPerPage","toolbar","searchTooltip","searchPlaceholder","icons","Check","DetailPanel","ChevronRight","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","Search","ThirdStateCheck","Remove","ViewColumn","ResetSearch","Clear","SortArrow","ArrowDownward","idx","tableContent","k","key","border","actions","icon","name","action","e","window","scrollTo","document","body","scrollHeight","currentTarget","Snackbar","autoHideDuration","onClose","Alert","TextField","placeholder","value","onChange","target","handleInput","InputProps","endAdornment","IconButton","searchResult","handleSearch","SpeedDial","ariaLabel","SpeedDialIcon","direction","SpeedDialAction","tooltipTitle","Menu","keepMounted","Boolean","MenuItem","sortedData","test","Intl","Collator","compare","newSortingState","handleSort","About","href","App","initState","content","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e0d99e80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/latest_situation_of_reported_cases_covid_19_chi.d37f87af.csv\";","module.exports = __webpack_public_path__ + \"static/media/enhanced_sur_covid_19_chi.16c1bc1a.csv\";","module.exports = __webpack_public_path__ + \"static/media/building_list_chi.7499dc78.csv\";","module.exports = __webpack_public_path__ + \"static/media/home_confinees_tier2_building_list.0b6aa28c.csv\";","module.exports = __webpack_public_path__ + \"static/media/loading.75ae2ba2.gif\";","export const PAGES = {\r\n    MAIN: 'main',\r\n    ABOUT: 'about',\r\n    LATEST: 'latest',\r\n    CASES: 'cases',\r\n    BUILDINGS: 'buildings',\r\n    CONFINEES_BUILDINGS: 'con_buildings'\r\n}\r\nexport const STAT_URLS = {\r\n    LATEST: 'latest_situation_of_reported_cases_covid_19_chi.csv',\r\n    CASES: 'enhanced_sur_covid_19_chi.csv',\r\n    BUILDINGS: 'building_list_chi.csv',\r\n    CONFINEES_BUILDINGS: 'home_confinees_tier2_building_list.csv'\r\n}\r\nexport const STAT_TITLE = {\r\n    LATEST: '本港2019冠狀病毒病的最新情況',\r\n    CASES: '本港疑似/確診2019冠狀病毒的個案詳情',\r\n    BUILDINGS: '過去14天內曾有疑似/確診個案居住過的住宅大廈; 或過去 14 天內曾出現兩宗或以上疑似/確診個案的非住宅大廈',\r\n    CONFINEES_BUILDINGS: '根據香港法例第599C章正在接受強制家居檢疫人士所居住的大廈名單'\r\n}","import React, {useState, useEffect} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Button } from '@material-ui/core';\r\nimport {PAGES} from '../constants/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport const CustomAppBar = (props) => {  \r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (currentPage) => {\r\n      props.setCurrentPage((prevState) => ({\r\n          ...prevState,\r\n          currentPage,\r\n      }))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" style={{height: 64}}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {`新冠肺炎疫情數據庫`}\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={() => handleChangePage(PAGES.MAIN)}>\r\n            主頁\r\n          </Button>\r\n          <Button color=\"inherit\" onClick={() => handleChangePage(PAGES.ABOUT)}>\r\n            關於\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {PAGES} from '../constants/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\nconst listButtonStyles = {\r\n    marginBottom: 10,\r\n}\r\nexport const Dashboard = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChangePage = (currentPage) => {\r\n        props.setCurrentPage((prevState) => ({\r\n            ...prevState,\r\n            currentPage,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                        marginTop: 30,\r\n                        paddingTop: 0,\r\n                        paddingBottom: 0\r\n                    }}\r\n                >\r\n                    <Button variant=\"contained\" color=\"default\" style={listButtonStyles} onClick={() => handleChangePage(PAGES.LATEST)}>\r\n                        本港2019冠狀病毒病的最新情況\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"default\" style={listButtonStyles} onClick={() => handleChangePage(PAGES.CASES)}>\r\n                        本港疑似/確診2019冠狀病毒的個案詳情\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"default\" style={listButtonStyles} onClick={() => handleChangePage(PAGES.BUILDINGS)}>\r\n                        過去14天內曾有疑似/確診個案居住過的住宅大廈; 或過去 14 天內曾出現兩宗或以上疑似/確診個案的非住宅大廈\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"default\" tyle={listButtonStyles} onClick={() => handleChangePage(PAGES.CONFINEES_BUILDINGS)}>\r\n                        根據香港法例第599C章正在接受強制家居檢疫人士所居住的大廈名單\r\n                    </Button>\r\n                    <div style={{marginTop: 20, textAlign: 'right'}}>本程式最後更新時間：14/07/2020 14:02</div>  \r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport loadingGif from '../img/loading.gif';\r\nimport {STAT_URLS, STAT_TITLE} from '../constants/constants';\r\nimport {csv} from 'd3-fetch';\r\nimport latest from '../csv/latest_situation_of_reported_cases_covid_19_chi.csv';\r\nimport cases from '../csv/enhanced_sur_covid_19_chi.csv';\r\nimport buildings from '../csv/building_list_chi.csv';\r\nimport confiness from '../csv/home_confinees_tier2_building_list.csv';\r\n\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport Search from '@material-ui/icons/Search'\r\nimport ViewColumn from '@material-ui/icons/ViewColumn'\r\nimport SaveAlt from '@material-ui/icons/SaveAlt'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRight from '@material-ui/icons/ChevronRight'\r\nimport FirstPage from '@material-ui/icons/FirstPage'\r\nimport LastPage from '@material-ui/icons/LastPage'\r\nimport Check from '@material-ui/icons/Check'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport Remove from '@material-ui/icons/Remove'\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Sort from '@material-ui/icons/Sort';\r\n\r\nimport MaterialTable from 'material-table';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\r\n\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      transform: 'translateZ(0px)',\r\n      flexGrow: 1,\r\n    },\r\n    exampleWrapper: {\r\n      position: 'relative',\r\n      marginTop: theme.spacing(3),\r\n      height: 380,\r\n    },\r\n    radioGroup: {\r\n      margin: theme.spacing(1, 0),\r\n    },\r\n    speedDial: {\r\n      position: 'absolute',\r\n      '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n      },\r\n      '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\r\n        top: theme.spacing(2),\r\n        left: theme.spacing(2),\r\n      },\r\n    },\r\n}));\r\n\r\nexport const Statisitcs = (props) => {\r\n    const initState = {\r\n        columns: null,\r\n        data: null,\r\n        title: '',\r\n        searchKey: '',\r\n        filteredData: null,\r\n    }\r\n    const initSortingState = {}\r\n    const initSnackState = {\r\n        open: false,\r\n        severity: \"info\",\r\n        message: \"\"\r\n    }\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [snackState, setSnackState] = useState(initSnackState);\r\n    const [speedDialOpen, setSpeedDialOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [state, setState] = useState(initState);\r\n    const [sortingState, setSortingState] = useState(initSortingState);\r\n    const classes = useStyles();\r\n    const setOpenSnack = (open) => {\r\n        setSnackState((prevSnack) => ({...prevSnack, open,}))\r\n    }\r\n    useEffect(() => {\r\n        let url = '';\r\n        let title = '';\r\n        switch(props.url) {\r\n            case STAT_URLS.LATEST: url = latest; title = STAT_TITLE.LATEST; break;\r\n            case STAT_URLS.CASES: url = cases; title = STAT_TITLE.CASES; break;\r\n            case STAT_URLS.BUILDINGS: url = buildings; title = STAT_TITLE.BUILDINGS; break;\r\n            case STAT_URLS.CONFINEES_BUILDINGS: url = confiness; title = STAT_TITLE.CONFINEES_BUILDINGS; break;\r\n        }\r\n        setIsLoading(true);\r\n        setSnackState((prevSnack) => ({...prevSnack, open: true, severity: 'info', message: '加載中...'}))\r\n        csv(url).then(csvData => {\r\n            const data = csvData.filter((row, i) => i !== csvData.length-1);\r\n            const columns = csvData.columns.map(col => ({title: col, field: col}));\r\n            let hasDate = false;\r\n            let dataSortByDate = {};\r\n            for (let i=0;i<csvData.columns.length;i++) {\r\n                if (csvData.columns[i].includes('日期')) {\r\n                    dataSortByDate = data.sort((a,b) => compareDate(a, b, csvData.columns[i], 'ASC'));\r\n                    hasDate = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasDate) {\r\n                setState((prevState) => ({...prevState, data: dataSortByDate, columns, title, filteredData: dataSortByDate,}));\r\n            } else {\r\n                setState((prevState) => ({...prevState, data, columns, title, filteredData: data,}));\r\n            }\r\n            \r\n            const sortingState = {};\r\n            Object.keys(csvData.columns).forEach(column => {\r\n                sortingState[columns[column].title] = columns[column].title.includes('日期') ? 'DES' : 'ASC';\r\n            });\r\n            setSortingState(sortingState);\r\n            setIsLoading(false);\r\n            setSnackState((prevSnack) => ({...prevSnack, severity: 'success', message: '完成'}))\r\n        })\r\n    },[])\r\n\r\n    const handleSearch = () => {\r\n        setSnackState({\r\n            open: true,\r\n            severity: \"into\",\r\n            message: \"處理中\",\r\n        })\r\n        const {searchKey} = state;\r\n        if (searchKey === \"\") {\r\n            handleReset();\r\n            setSnackState({\r\n                open: true,\r\n                severity: \"success\",\r\n                message: \"完成\"\r\n            })\r\n            return;\r\n        };\r\n        const searchResult = state.data.filter(row => {\r\n            const keys = Object.keys(row);\r\n            if (keys.includes(searchKey)) return true;\r\n            let contains = false;\r\n\r\n            const matchedKeys = keys.filter(key => {\r\n                return row[key].includes(searchKey);\r\n            });\r\n            return matchedKeys.length > 0;\r\n        })\r\n        setState((prevState) => ({...prevState, filteredData: searchResult,}));\r\n        setSnackState({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"完成\"\r\n        })\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setState((prevState) => ({...prevState, searchKey: '', filteredData: state.data}));\r\n    }\r\n\r\n    const handleInput = (e) => {\r\n        const searchKey = e.target.value;\r\n        setState((prevState) => ({...prevState, searchKey,}))\r\n    }\r\n\r\n    const handleGotoTop = () => {\r\n        window.scrollTo({top: 0});\r\n    }\r\n\r\n    const handleGotoBottom = () => {\r\n        window.scrollTo(0,document.body.scrollHeight);\r\n    }\r\n\r\n    const compareDate = (a,b, column, sort) => {\r\n        const aTimestamps = a[column].split('/');\r\n        const bTimestamps = b[column].split('/');\r\n        const aTime = new Date();\r\n        aTime.setDate(aTimestamps[0]);\r\n        aTime.setMonth(aTimestamps[1]);\r\n        aTime.setFullYear(aTimestamps[2]);\r\n        const bTime = new Date();\r\n        bTime.setDate(bTimestamps[0]);\r\n        bTime.setMonth(bTimestamps[1]);\r\n        bTime.setFullYear(bTimestamps[2]);\r\n        return sort === 'ASC' ? bTime.getTime() - aTime.getTime() : aTime.getTime() - bTime.getTime();\r\n    }\r\n\r\n    const letterSort = (lang, letters) => {\r\n        letters.sort(new Intl.Collator(lang).compare);\r\n        return letters;\r\n      }\r\n\r\n    const handleSort = (column) => {\r\n        handleCloseMenu();\r\n        if (sortingState[column] === 'ASC') {\r\n            let sortedData = [];\r\n            if (column.includes('日期')) {\r\n                sortedData = state.filteredData.sort((a,b) => compareDate(a, b, column, 'ASC'))\r\n            } else if (/^\\d+$/.test(state.filteredData[0][column])) {\r\n                sortedData = state.filteredData.sort((a,b) => b[column] - a[column]);\r\n            } else {\r\n                // sortedData = state.filteredData.sort((a,b) => b[column] - a[column]);\r\n                sortedData = state.filteredData.sort((a,b) => new Intl.Collator('cn').compare(b[column], a[column]));\r\n            }\r\n            setState((prevState) => ({...prevState, filteredData: sortedData}));\r\n            const newSortingState = {...sortingState};\r\n            Object.keys(newSortingState).forEach((key) => {\r\n                if (new Intl.Collator('cn').compare(key, column) === 0) {\r\n                    newSortingState[key] = 'DES';\r\n                }\r\n            })\r\n            setSortingState(newSortingState)\r\n        } else {\r\n            let sortedData = [];\r\n            if (column.includes('日期')) {\r\n                sortedData = state.filteredData.sort((a,b) => compareDate(a, b, column, 'DES'))\r\n            } else if (/^\\d+$/.test(state.filteredData[0][column])) {\r\n                sortedData = state.filteredData.sort((a,b) => a[column] - b[column]); \r\n            } else {\r\n                // sortedData = state.filteredData.sort((a,b) => a[column] - b[column]); \r\n                sortedData = state.filteredData.sort((a,b) => new Intl.Collator('cn').compare(a[column], b[column]));\r\n            }\r\n            setState((prevState) => ({...prevState, filteredData: sortedData}));\r\n            const newSortingState = {...sortingState};\r\n            Object.keys(newSortingState).forEach((key) => {\r\n                if (new Intl.Collator('cn').compare(key, column) === 0) {\r\n                    newSortingState[key] = 'ASC';\r\n                }\r\n            })\r\n            setSortingState(newSortingState)\r\n        }\r\n    }\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    let result = <span/>;\r\n    if (state.data !== null && state.col !== null) {\r\n        result = (\r\n            <MaterialTable\r\n                title={<div style={{ display: 'flex' }}>{state.title}</div>}\r\n                columns={state.columns}\r\n                data={state.data}\r\n                localization={{\r\n                    pagination: {\r\n                        previousTooltip: '上一頁',\r\n                        previousAriaLabel: '上一頁',\r\n                        nextTooltip: '下一頁',\r\n                        nextAriaLabel: '下一頁',\r\n                        lastTooltip: '最後一頁',\r\n                        lastAriaLabel: '最後一頁',\r\n                        firstTooltip: '第一頁',\r\n                        firstAriaLabel: '第一頁',\r\n                        labelRowsSelect: '行',\r\n                        labelRowsPerPage: '行/頁'\r\n                    },\r\n                    toolbar: {\r\n                        searchTooltip: '搜尋',\r\n                        searchPlaceholder: '搜尋'\r\n                    },\r\n\r\n                }}\r\n                icons={{\r\n                    Check: Check,\r\n                    DetailPanel: ChevronRight,\r\n                    Export: SaveAlt,\r\n                    Filter: FilterList,\r\n                    FirstPage: FirstPage,\r\n                    LastPage: LastPage,\r\n                    NextPage: ChevronRight,\r\n                    PreviousPage: ChevronLeft,\r\n                    Search: Search,\r\n                    ThirdStateCheck: Remove,\r\n                    ViewColumn: ViewColumn,\r\n                    ResetSearch: Clear,\r\n                    SortArrow: ArrowDownward\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    if (state.filteredData !== null && state.columns !== null) {\r\n        result = state.filteredData.map((row, idx) => {\r\n            const keys = Object.keys(row);\r\n            const tableContent = keys.map(k => <tr><td>{k}</td><td>{row[k]}</td></tr>)\r\n            return (\r\n            <div key={idx} style={{backgroundColor: 'white', color: 'rgba(0, 0, 0, 0.87)', borderRadius: '10px', border: '1px solid #E7E7E7', margin: 10}}>\r\n                <table style={{width: 300, textAlign: 'left', padding: 30}}>\r\n                    <tbody>{tableContent}</tbody>\r\n                </table>\r\n            </div>\r\n        )})\r\n    }\r\n\r\n    const actions = [\r\n        { icon: <ArrowDownward />, name: '最下', action: (e) => handleGotoBottom()},\r\n        { icon: <ArrowUpward />, name: '最上', action: (e) => handleGotoTop()},\r\n        { icon: <Sort />, name: '排序', action: (e) => setAnchorEl(e.currentTarget)},\r\n    ];\r\n    return (\r\n        <div>\r\n            <Snackbar open={snackState.open} autoHideDuration={6000} onClose={() => setOpenSnack(false)}>\r\n                <Alert onClose={() => setOpenSnack(false)} severity={snackState.severity}>\r\n                    {snackState.message}\r\n                </Alert>\r\n            </Snackbar>\r\n            {isLoading ? <span /> :\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center'\r\n                }}>\r\n                    <TextField\r\n                        placeholder=\"搜尋\"\r\n                        value={state.searchKey}\r\n                        onChange={(e) => handleInput(e)}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <React.Fragment>\r\n                                    <IconButton onClick={() => handleSearch()}>\r\n                                        <Search />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={() => handleReset()}>\r\n                                        <Clear />\r\n                                    </IconButton>\r\n                                </React.Fragment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {result}\r\n                    <SpeedDial\r\n                        ariaLabel=\"sdsd\"\r\n                        className={classes.speedDial}\r\n                        icon={<SpeedDialIcon />}\r\n                        onClick={() => setSpeedDialOpen(!speedDialOpen)}\r\n                        open={speedDialOpen}\r\n                        direction={'up'}\r\n                        style={{position: 'fixed'}}\r\n                    >\r\n                        {actions.map((action) => (\r\n                            <SpeedDialAction\r\n                                key={action.name}\r\n                                icon={action.icon}\r\n                                tooltipTitle={action.name}\r\n                                onClick={(e) => action.action(e)}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => handleCloseMenu()}\r\n                    >\r\n                        {state.columns && state.columns.map(column => {\r\n                            return (\r\n                            <MenuItem onClick={() => handleSort(column.title)}>\r\n                                {`${column.title} (${sortingState[column.title] && sortingState[column.title] === 'ASC' ? '由大至小' : '由小至大'})`}\r\n                            </MenuItem>\r\n                        );})}\r\n                    </Menu>\r\n                </div>}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nexport const About = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                免責聲明：所有資料由政府提供，請自行判斷資料真確性。如要查看csv及pdf數據，請瀏覽<a target=\"_blank\" href=\"https://data.gov.hk/tc-data/dataset/hk-dh-chpsebcddr-novel-infectious-agent\">政府資料一線通網站</a>\r\n            </div>\r\n            <div style={{marginTop: 20}}>\r\n                此應用程式由Johnny Ho開發，如有任何疑問，請電郵<a href=\"mailto:johnnyhohohohohoho@gmail.com\">johnnyhohohohohoho@gmail.com</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {CustomAppBar} from './components/AppBar'\r\nimport { Dashboard } from './pages/Dashboard';\r\nimport { Statisitcs} from './pages/Statistics';\r\nimport { About } from './pages/About';\r\nimport {PAGES,STAT_URLS} from './constants/constants';\r\n\r\nfunction App() {\r\n  const initState = {\r\n    currentPage: PAGES.MAIN,\r\n    isLoading: false,\r\n  }\r\n  const [state, setState] = useState(initState);\r\n  let content = <span/>;\r\n  switch(state.currentPage) {\r\n    case PAGES.MAIN: content = <Dashboard setCurrentPage={setState}/>; break;\r\n    case PAGES.ABOUT: content = <About/>; break;\r\n    case PAGES.LATEST: content = <Statisitcs url={STAT_URLS.LATEST}/>; break;\r\n    case PAGES.CASES: content = <Statisitcs url={STAT_URLS.CASES}/>; break;\r\n    case PAGES.BUILDINGS: content = <Statisitcs url={STAT_URLS.BUILDINGS}/>; break;\r\n    case PAGES.CONFINEES_BUILDINGS: content = <Statisitcs url={STAT_URLS.CONFINEES_BUILDINGS}/>; break;\r\n    default: break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <CustomAppBar setCurrentPage={setState}/>\r\n      <div style={{marginTop: 74}}>\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}